{"version":3,"sources":["components/Header.js","context/CategoriasContext.js","context/RecetasContext.js","components/Formulario.js","context/ModalContext.js","components/Receta.js","components/ListaRecetas.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","CategoriasContext","createContext","CategriasProvider","props","useState","categorias","setCategorias","useEffect","a","axios","get","data","drinks","getCategorias","Provider","value","children","RecetasContext","RecetasProvider","recetas","setRecetas","nombre","categoria","busquedaRecetas","setBusquedaRecetas","consultar","setConsultar","url","res","getRecetas","Formulario","busqueda","setBusqueda","useContext","getDatosReceta","e","target","name","onSubmit","preventDefault","type","placeholder","onChange","map","index","key","strCategory","ModalContext","ModalProvider","idReceta","setIdReceta","recetaInfo","setReceta","getReceta","getModalStyle","top","left","transform","useStyles","makeStyles","theme","paper","position","width","backgroundColor","palette","background","boxShadow","shadows","padding","spacing","Receta","receta","modalStyle","open","setOpen","classes","console","log","strDrink","src","strDrinkThumb","alt","onClick","idDrink","Modal","onClose","style","strInstructions","ingredientes","i","push","mostrarIngredientes","ListaRecetas","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.2844a364.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Header = () =>{\r\n    return(\r\n        <header className=\"bg-alert\">\r\n            <h1>Busca Recetas de Bebidas</h1>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import React,{createContext, useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\n\r\n//contest\r\nexport const CategoriasContext = createContext();\r\n\r\n//provider\r\nconst CategriasProvider =(props) =>{\r\n    const [categorias,setCategorias]=useState([])\r\n\r\n    //llamar api\r\n    useEffect(()=>{\r\n        const getCategorias = async()=>{\r\n            const url='https://www.thecocktaildb.com/api/json/v1/1/list.php?c=list'\r\n            const categorias = await axios.get(url)\r\n\r\n            setCategorias(categorias.data.drinks);\r\n        }\r\n        getCategorias()\r\n    },[])\r\n\r\n    return(\r\n        <CategoriasContext.Provider value={{categorias}}>\r\n            {props.children}\r\n        </CategoriasContext.Provider>\r\n    )\r\n\r\n}\r\nexport default CategriasProvider","import React,{createContext, useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\n\r\nexport const RecetasContext = createContext()\r\n\r\nconst RecetasProvider =(props) =>{\r\n    const [recetas,setRecetas] =useState([])\r\n    const [busquedaRecetas,setBusquedaRecetas] = useState({\r\n        nombre:'',\r\n        categoria:''\r\n    })\r\n    const [consultar,setConsultar] = useState(false)\r\n\r\n\r\n    const {nombre,categoria} = busquedaRecetas\r\n    useEffect(()=>{\r\n        if (consultar){\r\n            const getRecetas = async()=>{\r\n                const url = `https://www.thecocktaildb.com/api/json/v1/1/filter.php?i=${nombre}&c=${categoria}`\r\n                const res = await axios.get(url)\r\n                setRecetas(res.data.drinks);\r\n                \r\n            }\r\n            getRecetas()\r\n        }\r\n        \r\n    },[busquedaRecetas])\r\n\r\n    return(\r\n        <RecetasContext.Provider value={{setBusquedaRecetas, setConsultar, recetas}}>\r\n            {props.children}\r\n        </RecetasContext.Provider>\r\n    )\r\n}\r\n\r\nexport default RecetasProvider","import React,{useContext, useState} from 'react'\r\nimport {CategoriasContext} from '../context/CategoriasContext'\r\nimport {RecetasContext} from '../context/RecetasContext'\r\n\r\nconst Formulario= ()=>{\r\n\r\n    const [busqueda,setBusqueda] = useState({\r\n        nombre:'',\r\n        categoria:''\r\n    })\r\n\r\n    const{categorias} = useContext(CategoriasContext);\r\n    const {setBusquedaRecetas,setConsultar} =useContext(RecetasContext)\r\n    //console.log('formulario categorias',categorias);\r\n\r\n    //leer los contenidos\r\n    const getDatosReceta =e =>{\r\n        setBusqueda({\r\n            ...busqueda,\r\n            [e.target.name]:e.target.value\r\n        })\r\n    }\r\n\r\n    const buscaReceta = (e)=>{   //Si falla,ver forma del video 176 4 mins\r\n        e.preventDefault()\r\n        setBusquedaRecetas(busqueda)\r\n        setConsultar(true)\r\n    }\r\n    \r\n    return(\r\n        <form className=\"col-12\" onSubmit={buscaReceta}>\r\n            <fieldset className=\"text-center\">\r\n                <legend>Busca bebidas por Categoria o Ingrediente</legend>\r\n            </fieldset>\r\n            <div className=\"row mt-4\">\r\n                <div className=\"col-md-4\">\r\n                    <input type=\"text\" className=\"form-control\" name=\"nombre\" placeholder=\"Busca por Ingrediente\" onChange={getDatosReceta} />\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <select className=\"form-control\" name=\"categoria\" onChange={getDatosReceta}>\r\n                        <option value=\"\">Selecciona Categor√≠a</option>\r\n                        {categorias.map((categoria,index)=>{\r\n                            return <option key={index} value={categoria.strCategory}>{categoria.strCategory}</option>\r\n                        })}\r\n                    </select>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <input type=\"submit\" className=\"btn btn-block btn-primary\" value=\"Buscar Bebidas\" />\r\n                </div>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Formulario;","import React,{createContext,useEffect,useState} from 'react'\r\nimport axios from 'axios'\r\n\r\nexport const ModalContext = createContext()\r\n\r\nconst ModalProvider= (props) =>{\r\n    const [idReceta,setIdReceta] = useState(null)\r\n    const [recetaInfo,setReceta] = useState({})\r\n\r\n    useEffect(()=>{\r\n        const getReceta = async ()=>{\r\n            if (!idReceta){\r\n                return\r\n            }\r\n            const url=`https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=${idReceta}`\r\n            const res = await axios.get(url)\r\n            setReceta(res.data.drinks[0]);\r\n        }\r\n        getReceta()\r\n    },[idReceta])\r\n\r\n    return(\r\n        <ModalContext.Provider value={{setIdReceta,recetaInfo,setReceta}}>\r\n            {props.children}\r\n        </ModalContext.Provider>\r\n    )\r\n}\r\nexport default ModalProvider","import React,{useContext, useState} from 'react'\r\nimport { ModalContext } from '../context/ModalContext'\r\n\r\n//npm install @material-ui/core --save\r\nimport Modal from '@material-ui/core/Modal'\r\nimport {makeStyles} from '@material-ui/core/styles'\r\nimport { light } from '@material-ui/core/styles/createPalette';\r\n\r\nfunction getModalStyle() {\r\n    const top = 50 ;\r\n    const left = 50;\r\n  \r\n    return {\r\n      top: `${top}%`,\r\n      left: `${left}%`,\r\n      transform: `translate(-${top}%, -${left}%)`,\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    paper: {\r\n      position: 'absolute',\r\n      width: 600,\r\n      backgroundColor: theme.palette.background.paper,\r\n      boxShadow: theme.shadows[5],\r\n      padding: theme.spacing(2, 4, 3),\r\n    },\r\n}));\r\n\r\nconst Receta = ({receta})=>{\r\n    //config del modal\r\n    const [modalStyle] = useState(getModalStyle)\r\n    const [open,setOpen] = useState(false)\r\n\r\n    const classes = useStyles()\r\n\r\n    const handleOpen= ()=>{\r\n        setOpen(true)\r\n    }\r\n    const handleClose = ()=>{\r\n        setOpen(false)\r\n    }\r\n\r\n\r\n    const {setIdReceta,recetaInfo,setReceta} = useContext(ModalContext)\r\n    console.log(recetaInfo);\r\n\r\n    //mostrar ingredientes\r\n    const mostrarIngredientes =(recetaInfo)=>{\r\n        let ingredientes = []\r\n        for (let i=1;i<16;i++){\r\n            if (recetaInfo[`strIngredient${i}`]){\r\n                ingredientes.push(\r\n                    <li>{recetaInfo[`strIngredient${i}`]}   {recetaInfo[`strMeasure${i}`]}</li>\r\n                )\r\n            }\r\n        }\r\n        return ingredientes\r\n    }\r\n\r\n    return(\r\n        <div className=\"col-md-4 mb-3\">\r\n            <div className=\"card\">\r\n                <h2 className=\"card-header\">{receta.strDrink}</h2>\r\n                <img src={receta.strDrinkThumb} alt={`Imagen de ${receta.strDrink}`} className=\"card-img-top\"/>\r\n                <div className=\"card-body\">\r\n                    <button type='button' className='btn btn-block btn-primary' onClick={()=>{setIdReceta(receta.idDrink); handleOpen()}}>Ver Receta</button>\r\n                    <Modal open={open} onClose={()=>{setIdReceta(null);setReceta({});handleClose()}}>\r\n                        <div style={modalStyle} className={classes.paper}>\r\n                            <h2>{recetaInfo.strDrink}</h2>\r\n                            <h3 className=\"mt-4\">Instrucciones</h3>\r\n                            <p>\r\n                                {recetaInfo.strInstructions}\r\n                            </p>\r\n                            <img src={recetaInfo.strDrinkThumb} alt=\"\" className=\"img-fluid my-4\"/>\r\n                            <h3>Ingredientes y cantidades</h3>\r\n                            <ul>\r\n                                {mostrarIngredientes(recetaInfo)}\r\n                            </ul>\r\n                        </div>\r\n                    </Modal>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Receta","import React,{useContext} from 'react'\r\nimport {RecetasContext} from '../context/RecetasContext'\r\nimport Receta from './Receta'\r\n\r\nconst ListaRecetas= ()=>{\r\n    //extraer las recetas\r\n    const {recetas} = useContext(RecetasContext)\r\n\r\n    return(\r\n        <div className=\"row mt-5\">\r\n            {recetas.map(receta=>(\r\n                <Receta key={receta.idDrink} receta={receta} />\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ListaRecetas","import React,{Fragment} from 'react';\nimport Header from './components/Header'\nimport Formulario from './components/Formulario'\nimport ListaRecetas from './components/ListaRecetas'\n\nimport CategoriasProvider from './context/CategoriasContext'\nimport RecetasProvider from './context/RecetasContext'\nimport ModalProvider from './context/ModalContext'\n\nfunction App() {\n    return (\n      <CategoriasProvider>\n        <RecetasProvider>\n          <ModalProvider>\n            <Header />\n            <div className=\"container mt-5\">\n              <div className=\"row\">\n                <Formulario />\n              </div>\n              <ListaRecetas />\n            </div>\n          </ModalProvider>\n        </RecetasProvider>\n      </CategoriasProvider>\n\n    );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render( <\n    React.StrictMode >\n    <\n    App / >\n    <\n    /React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}